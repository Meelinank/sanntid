name: CMake on multiple platforms with OpenCV

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            vcpkg_triplet: x64-windows
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            apt_package: libopencv-dev
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            apt_package: libopencv-dev
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v3

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install OpenCV (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -y ${{ matrix.apt_package }}

    - name: Install vcpkg (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        git clone https://github.com/microsoft/vcpkg.git
        .\vcpkg\bootstrap-vcpkg.bat
      shell: cmd

    - name: Install OpenCV (Windows)
      if: startsWith(matrix.os, 'windows')
      run: |
        .\vcpkg\vcpkg install opencv4[${{ matrix.vcpkg_triplet }}] --clean-after-build
      shell: cmd
      env:
        VCPKG_DEFAULT_TRIPLET: ${{ matrix.vcpkg_triplet }}

    - name: Download and install Boost
      id: install-boost
      uses: MarkusJx/install-boost@v2.4.4
      with:
        boost_version: 1.82.0

    - name: Configure CMake
      run: |
        cmake -B ${{ steps.strings.outputs.build-output-dir }} \
        -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake \
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
        -S ${{ github.workspace }}
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
